# -*- coding: utf-8 -*-
"""Yulu_Bikes.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1seZDzUGvMUgq2R1esbgErQE5EjgwAVGp
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import warnings
warnings.filterwarnings('ignore')

df=pd.read_csv("Yulu.csv")
df.head()

df.info()

#People are getting very less holdiays nearly 3% this can lead to a stressful work life balance

df["holiday"].value_counts(normalize=True)*100

df["datetime"]=pd.to_datetime(df["datetime"])
cat_cols=["season","holiday","workingday","weather"]
for i in cat_cols:
    df[i]=df[i].astype("category")
df.info()

# number of unique values in each categorical columns
df[cat_cols].melt().groupby(['variable', 'value'])[['value']].count()

# detecting missing values in the dataset
df.isnull().sum()

df.iloc[:, 1:].describe(include='all')

sns.histplot(df["registered"],kde=True)#somewhat like right skewed data, lets try to make it normal by  applying log transformation

sns.histplot(np.log(df["registered"]),kde=True)#Hence its proved this data cant be tranformed into gaussian even by log transformation



# minimum datetime and maximum datetime
df['datetime'].min(), df['datetime'].max()

# understanding the distribution for numerical variables
num_cols = ['temp', 'atemp', 'humidity', 'windspeed', 'casual', 'registered','count']

fig, axis = plt.subplots(nrows=2, ncols=3, figsize=(16, 12))

index = 0
for row in range(2):
    for col in range(3):
        sns.histplot(df[num_cols[index]], ax=axis[row, col], kde=True)
        index += 1

plt.show()
sns.histplot(df[num_cols[-1]], kde=True)
plt.show()

import statsmodels.api as sm

# Example data
# Assuming df is your DataFrame and contains columns like "temp", "atemp", etc.

# Temperature QQ plot
sm.qqplot(df["temp"], line='45')
plt.title('QQ Plot for Temperature')  # Set title for temp
plt.show()

# Atemp QQ plot
sm.qqplot(df["atemp"], line='45')
plt.title('QQ Plot for Atemp')  # Set title for atemp
plt.show()

# Humidity QQ plot
sm.qqplot(df["humidity"], line='45')
plt.title('QQ Plot for Humidity')  # Set title for humidity
plt.show()

# Windspeed QQ plot (log-transformed)
sm.qqplot(np.log(df["windspeed"]), line='45')
plt.title('QQ Plot for Log(Windspeed)')  # Set title for log(windspeed)
plt.show()

# Casual QQ plot (log-transformed)
sm.qqplot(np.log(df["casual"]), line='45')
plt.title('QQ Plot for Log(Casual)')  # Set title for log(casual)
plt.show()

# Registered QQ plot (log-transformed)
sm.qqplot(np.log(df["registered"]), line='45')
plt.title('QQ Plot for Log(Registered)')  # Set title for log(registered)
plt.show()

from scipy.stats import shapiro

stat, p = shapiro(df["temp"])
print(f'Statistic={stat}, p-value={p}')
if p > 0.05:
    print('Data is normally distributed')
else:
    print('Data is not normally distributed')

from scipy.stats import shapiro

stat, p = shapiro(np.log(df["casual"]))
print(f'Statistic={stat}, p-value={p}')
if p > 0.05:
    print('Data is normally distributed')
else:
    print('Data is not normally distributed')

from scipy.stats import shapiro

stat, p = shapiro(np.log(df["registered"]))
print(f'Statistic={stat}, p-value={p}')
if p > 0.05:
    print('Data is normally distributed')
else:
    print('Data is not normally distributed')

# plotting box plots to detect outliers in the data
fig, axis = plt.subplots(nrows=2, ncols=3, figsize=(16, 12))

index = 0
for row in range(2):
    for col in range(3):
        sns.boxplot(x=df[num_cols[index]], ax=axis[row, col])
        index += 1

plt.show()
sns.boxplot(x=df[num_cols[-1]])
plt.show()

#windspeed,casual,count,registered have outliers in them

# plotting categorical variables againt count using boxplots
fig, axis = plt.subplots(nrows=2, ncols=2, figsize=(16, 12))

index = 0
for row in range(2):
    for col in range(2):
        sns.boxplot(data=df, x=cat_cols[index], y='count', ax=axis[row, col])
        index += 1

plt.show()

#1.In summer and fall seasons more bikes are rented as compared to other seasons.
#2.Whenever its a holiday more bikes are rented.
#3.It is also clear from the workingday also that whenever day is holiday or weekend, slightly more bikes were rented.
#4.Whenever there is rain, thunderstorm, snow or fog, there were less bikes were rented.

# plotting numerical variables againt count using scatterplot
fig, axis = plt.subplots(nrows=2, ncols=3, figsize=(16, 12))

index = 0
for row in range(2):
    for col in range(3):
        sns.scatterplot(data=df, x=num_cols[index], y='count', ax=axis[row, col])
        index += 1

plt.show()

#1.Whenever the humidity is less than 20, number of bikes rented is very very low.
#2.Whenever the temperature is less than 10, number of bikes rented is less.
#3.Whenever the windspeed is greater than 35, number of bikes rented is less

df.corr()['count']# understanding the correlation between count and numerical variables

sns.heatmap(df.corr())
plt.show()

"""Hypothesis Testing - 1
Null Hypothesis (H0): Weather is independent of the season

Alternate Hypothesis (H1): Weather is not independent of the season

Significance level (alpha): 0.05
"""

data_table = pd.crosstab(df['season'], df['weather'])
print("Observed values:")
data_table

from scipy import stats
val = stats.chi2_contingency(data_table)
expected_values = val[3]
expected_values

nrows, ncols = 4, 4
dof = (nrows-1)*(ncols-1)
print("degrees of freedom: ", dof)
alpha = 0.05


chi_sqr = sum([(o-e)**2/e for o, e in zip(data_table.values, expected_values)])
chi_sqr_statistic = chi_sqr[0] + chi_sqr[1]
print("chi-square test statistic: ", chi_sqr_statistic)

critical_val = stats.chi2.ppf(q=1-alpha, df=dof)
print(f"critical value: {critical_val}")

p_val = 1-stats.chi2.cdf(x=chi_sqr_statistic, df=dof)
print(f"p-value: {p_val}")

if p_val <= alpha:
    print("\nSince p-value is less than the alpha 0.05, We reject the Null Hypothesis. Meaning that\
    Weather is dependent on the season.")
else:
  print("Since p-value is greater than the alpha 0.05, We do not reject the Null Hypothesis")

"""Hypothesis Testing - 2
Null Hypothesis: Working day has no effect on the number of cycles being rented.

Alternate Hypothesis: Working day has effect on the number of cycles being rented.

Significance level (alpha): 0.05

We will use the 2-Sample T-Test to test the hypothess defined above
"""

data_group1 = df[df['workingday']==0]['count'].values
data_group2 = df[df['workingday']==1]['count'].values

np.var(data_group1), np.var(data_group2)

#Before conducting the two-sample T-Test we need to find if the given data groups have the same variance.
#If the ratio of the larger data groups to the small data group is less than 4:1
# then we can consider that the given data groups have equal variance.

#Here, the ratio is 34040.70 / 30171.35 which is less than 4:1

stats.ttest_ind(a=data_group1, b=data_group2, equal_var=True)

"""##Since pvalue is greater than 0.05 so we can not reject the Null hypothesis. We don't have the sufficient evidence to say that working day has effect on the number of cycles being rented.

###Hypothesis Testing - 3
Null Hypothesis: Number of cycles rented is similar in different weather and season.

Alternate Hypothesis: Number of cycles rented is not similar in different weather and season.

Significance level (alpha): 0.05

Here, we will use the ANOVA to test the hypothess defined above
"""

# defining the data groups for the ANOVA

gp1 = df[df['weather']==1]['count'].values
gp2 = df[df['weather']==2]['count'].values
gp3 = df[df['weather']==3]['count'].values
gp4 = df[df['weather']==4]['count'].values

gp5 = df[df['season']==1]['count'].values
gp6 = df[df['season']==2]['count'].values
gp7 = df[df['season']==3]['count'].values
gp8 = df[df['season']==4]['count'].values

# conduct the one-way anova
stats.f_oneway(gp1, gp2, gp3, gp4, gp5, gp6, gp7, gp8)

"""###Since p-value is less than 0.05, we reject the null hypothesis. This implies that Number of cycles rented is not similar in different weather and season conditions

###InsightsÂ¶
###In summer and fall seasons more bikes are rented as compared to other seasons.
###Whenever its a holiday more bikes are rented.
###It is also clear from the workingday also that whenever day is holiday or weekend, slightly more bikes were rented.
###Whenever there is rain, thunderstorm, snow or fog, there were less bikes were rented.
###Whenever the humidity is less than 20, number of bikes rented is very very low.
###Whenever the temperature is less than 10, number of bikes rented is less.
###Whenever the windspeed is greater than 35, number of bikes rented is less.

###Recommendations
###In summer and fall seasons the company should have more bikes in stock to be rented. Because the demand in these seasons is higher as compared to other seasons.
###With a significance level of 0.05, workingday has no effect on the number of bikes being rented.
###In very low humid days, company should have less bikes in the stock to be rented.
"""

